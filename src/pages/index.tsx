import { useMemo } from 'react';

import Head from 'next/head';
import { GetStaticProps } from 'next';

import nodeFetch from 'node-fetch';
import { createApi } from 'unsplash-js';

import { Tab } from '@headlessui/react';
import classNames from 'classnames';

import { HomeProps } from '@/types';
import { getPhotos, getUserPhotos } from '@/services/photos.service';

import { Header } from '@/components/Header';
import { Gallery } from '@/components/Gallery';
import { Footer } from '@/components/Footer';

import { tabs } from '@/constants';

export const getStaticProps: GetStaticProps<HomeProps> = async () => {

  const unsplash = createApi({
    accessKey: process.env.UNSPLASH_ACCESS_KEY!,
    fetch: nodeFetch as unknown as typeof fetch,
  });

  const italyPhotos = await getPhotos(unsplash, 'italy')
  const argentinaPhotos = await getPhotos(unsplash, 'argentina')
  const steffMzzttPhotos = await getUserPhotos(unsplash, 'steffmzztt')

  return {
    props: {
      italy: italyPhotos,
      argentina: argentinaPhotos,
      steffanalog: steffMzzttPhotos
    },
    revalidate: 10,
  };
}

export default function Home({ italy, argentina, steffanalog }: HomeProps) {

  const allPhotos = useMemo(() => {
    const all = [...italy,...argentina,...steffanalog]
    return all
  }, [italy, argentina, steffanalog])

  return (
    <>
      <Head>
        <title>PhotoExample</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main>
        <Header />
        <section className='w-full flex justify-center h-auto'>
          <article className='w-4/5 flex flex-col items-center'>

            <Tab.Group>
              <Tab.List className='flex justify-center items-center gap-10 py-5'>

                {tabs.map(tab => (
                  <Tab key={tab.key} className='p-2'>
                    {({ selected }) => (
                      <span className={classNames(
                        'uppercase text-lg',
                        selected ? 'text-white' : 'text-stone-600'
                      )}>
                        {tab.display}
                      </span>
                    )}
                  </Tab>
                ))}
              </Tab.List>
              <Tab.Panels className='bg-stone-900 bg-opacity-80 h-full max-w-[1000px] w-full p-2 sm:p-4'>
              <Tab.Panel>
                  <Gallery photos={allPhotos}></Gallery>
                </Tab.Panel>
                <Tab.Panel>
                  <Gallery photos={italy} />
                </Tab.Panel>
                <Tab.Panel>
                  <Gallery photos={argentina}></Gallery>
                </Tab.Panel>
                <Tab.Panel>
                  <Gallery photos={steffanalog}></Gallery>
                </Tab.Panel>
              </Tab.Panels>
            </Tab.Group>

          </article>
        </section >
        <Footer />
      </main>
    </>
  );
}

